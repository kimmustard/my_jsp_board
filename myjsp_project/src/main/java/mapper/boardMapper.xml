<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BoardMapper">
	<insert id="add" parameterType="bvo">
		insert into board(title, writer, content, image_File) 
		values(#{title}, #{writer}, #{content}, #{image_File})
	</insert>

	<select id="list" resultType="bvo">
		select * from board
	</select>
	
	<select id="detail" parameterType="int" resultType="bvo">
		select * from board where bno = #{bno}
	</select>
	
	<update id="read">
		update board set readcount = readcount + 1 where bno = #{bno};
	</update>
	
	<update id="up" parameterType="bvo">
	  	update board set title = #{title}, content = #{content}, moddate = now(), 
	  	image_File = #{image_File}
	  	where bno = #{bno}
  	</update>
  	
  	<delete id="del" parameterType="int">
  		delete from board where bno = #{bno}
  	</delete>
  	
  	<select id="cnt" parameterType="pgvo" resultType="int">
  		select count(*) from board 
  		<include refid="search"></include>
  	</select>
  	
  	<select id="page" parameterType="pgvo" resultType="bvo">
  		select * from board 
  		<include refid="search"></include>
  		order by bno desc limit #{pageStart}, #{qty}
  	</select>

	<select id="mylist" parameterType="string" resultType="bvo">
		select * from board where writer = #{writer}
	</select>



	<select id="rcmCheck" parameterType="rvo" resultType="rvo">
		select * from recommend where bno = #{bno} and id = #{id}
	</select>

	<insert id="rcmAdd" parameterType="rvo">
		insert into recommend(bno, id) values(#{bno}, #{id});
	</insert>
	
	<update id="rcmPlus" parameterType="int">
		update board set recommend = recommend + 1 where bno = #{bno}
	</update>

	<delete id="delRmd" parameterType="int">
		delete from recommend where bno = #{bno}
	</delete>


	
	<sql id="search">
	
		<if test="type != null">
			<trim prefix="WHERE" prefixOverrides="OR">
				<foreach collection="typeToArray" item="type">
					<trim prefix="OR">
						<choose>
							<when test="type == 't'.toString()">
								title like concat('%',#{keyword},'%')
							</when>
							<when test="type == 'w'.toString()">
								writer like concat('%',#{keyword},'%')
							</when>
							<when test="type == 'c'.toString()">
								content like concat('%',#{keyword},'%')
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>		
		</if>
	
	
	</sql>








</mapper>